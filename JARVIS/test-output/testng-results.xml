<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="19" passed="16" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-05-11T16:17:16 IST" name="Default suite" finished-at="2023-05-11T16:20:03 IST" duration-ms="167375">
    <groups>
    </groups>
    <test started-at="2023-05-11T16:17:16 IST" name="Default test" finished-at="2023-05-11T16:20:03 IST" duration-ms="167375">
      <class name="com.logintest.Testclass1">
        <test-method is-config="true" signature="InitializeBrowser()[pri:0, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:17:08 IST" name="InitializeBrowser" finished-at="2023-05-11T16:17:16 IST" duration-ms="7787" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InitializeBrowser -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:17:16 IST" name="beforeTest" finished-at="2023-05-11T16:17:16 IST" duration-ms="318" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="pageobjects()[pri:0, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:17:16 IST" name="pageobjects" finished-at="2023-05-11T16:17:17 IST" duration-ms="43" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pageobjects -->
        <test-method is-config="true" signature="createExtentTest(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:17:17 IST" name="createExtentTest" finished-at="2023-05-11T16:17:17 IST" duration-ms="13" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Testclass1.v1()[pri:1, instance:com.logintest.Testclass1@121314f7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.logintest.Testclass1.v1() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method signature="v1()[pri:1, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:17:17 IST" name="v1" finished-at="2023-05-11T16:17:17 IST" duration-ms="227" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- v1 -->
        <test-method is-config="true" signature="captureScreenshot(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:17:17 IST" name="captureScreenshot" finished-at="2023-05-11T16:17:17 IST" duration-ms="10" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=v1 status=SUCCESS method=Testclass1.v1()[pri:1, instance:com.logintest.Testclass1@121314f7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.logintest.Testclass1.v1() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
        <test-method is-config="true" signature="createExtentTest(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:17:17 IST" name="createExtentTest" finished-at="2023-05-11T16:17:17 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Testclass1.v2()[pri:2, instance:com.logintest.Testclass1@121314f7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.logintest.Testclass1.v2() throws java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method signature="v2()[pri:2, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:17:17 IST" name="v2" finished-at="2023-05-11T16:17:23 IST" duration-ms="6380" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- v2 -->
        <test-method is-config="true" signature="captureScreenshot(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:17:23 IST" name="captureScreenshot" finished-at="2023-05-11T16:17:23 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=v2 status=SUCCESS method=Testclass1.v2()[pri:2, instance:com.logintest.Testclass1@121314f7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.logintest.Testclass1.v2() throws java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
        <test-method is-config="true" signature="createExtentTest(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:17:23 IST" name="createExtentTest" finished-at="2023-05-11T16:17:23 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Testclass1.ClickOnInvestNowButton()[pri:3, instance:com.logintest.Testclass1@121314f7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.logintest.Testclass1.ClickOnInvestNowButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method signature="ClickOnInvestNowButton()[pri:3, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:17:23 IST" name="ClickOnInvestNowButton" finished-at="2023-05-11T16:17:25 IST" duration-ms="1957" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickOnInvestNowButton -->
        <test-method is-config="true" signature="captureScreenshot(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:17:25 IST" name="captureScreenshot" finished-at="2023-05-11T16:17:25 IST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickOnInvestNowButton status=SUCCESS method=Testclass1.ClickOnInvestNowButton()[pri:3, instance:com.logintest.Testclass1@121314f7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.logintest.Testclass1.ClickOnInvestNowButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
        <test-method is-config="true" signature="createExtentTest(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:17:25 IST" name="createExtentTest" finished-at="2023-05-11T16:17:25 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Testclass1.ClickOnStartNowButton()[pri:4, instance:com.logintest.Testclass1@121314f7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.logintest.Testclass1.ClickOnStartNowButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method signature="ClickOnStartNowButton()[pri:4, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:17:25 IST" name="ClickOnStartNowButton" finished-at="2023-05-11T16:17:26 IST" duration-ms="1324" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickOnStartNowButton -->
        <test-method is-config="true" signature="captureScreenshot(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:17:26 IST" name="captureScreenshot" finished-at="2023-05-11T16:17:26 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickOnStartNowButton status=SUCCESS method=Testclass1.ClickOnStartNowButton()[pri:4, instance:com.logintest.Testclass1@121314f7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.logintest.Testclass1.ClickOnStartNowButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
        <test-method is-config="true" signature="createExtentTest(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:17:26 IST" name="createExtentTest" finished-at="2023-05-11T16:17:26 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Testclass1.AttemptQuestionnaries()[pri:5, instance:com.logintest.Testclass1@121314f7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.logintest.Testclass1.AttemptQuestionnaries() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method signature="AttemptQuestionnaries()[pri:5, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:17:26 IST" name="AttemptQuestionnaries" finished-at="2023-05-11T16:17:38 IST" duration-ms="11247" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AttemptQuestionnaries -->
        <test-method is-config="true" signature="captureScreenshot(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:17:38 IST" name="captureScreenshot" finished-at="2023-05-11T16:17:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AttemptQuestionnaries status=SUCCESS method=Testclass1.AttemptQuestionnaries()[pri:5, instance:com.logintest.Testclass1@121314f7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.logintest.Testclass1.AttemptQuestionnaries() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
        <test-method is-config="true" signature="createExtentTest(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:17:38 IST" name="createExtentTest" finished-at="2023-05-11T16:17:38 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Testclass1.ClickOnSubmitMyResponcesButton()[pri:6, instance:com.logintest.Testclass1@121314f7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.logintest.Testclass1.ClickOnSubmitMyResponcesButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method signature="ClickOnSubmitMyResponcesButton()[pri:6, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:17:38 IST" name="ClickOnSubmitMyResponcesButton" finished-at="2023-05-11T16:17:39 IST" duration-ms="1336" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickOnSubmitMyResponcesButton -->
        <test-method is-config="true" signature="captureScreenshot(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:17:39 IST" name="captureScreenshot" finished-at="2023-05-11T16:17:39 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickOnSubmitMyResponcesButton status=SUCCESS method=Testclass1.ClickOnSubmitMyResponcesButton()[pri:6, instance:com.logintest.Testclass1@121314f7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.logintest.Testclass1.ClickOnSubmitMyResponcesButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
        <test-method is-config="true" signature="createExtentTest(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:17:39 IST" name="createExtentTest" finished-at="2023-05-11T16:17:39 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Testclass1.ConfirmResponces()[pri:7, instance:com.logintest.Testclass1@121314f7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.logintest.Testclass1.ConfirmResponces() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method signature="ConfirmResponces()[pri:7, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:17:39 IST" name="ConfirmResponces" finished-at="2023-05-11T16:17:41 IST" duration-ms="2154" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ConfirmResponces -->
        <test-method is-config="true" signature="captureScreenshot(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:17:41 IST" name="captureScreenshot" finished-at="2023-05-11T16:17:41 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ConfirmResponces status=SUCCESS method=Testclass1.ConfirmResponces()[pri:7, instance:com.logintest.Testclass1@121314f7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.logintest.Testclass1.ConfirmResponces() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
        <test-method is-config="true" signature="createExtentTest(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:17:41 IST" name="createExtentTest" finished-at="2023-05-11T16:17:41 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Testclass1.SelectCheckbox()[pri:8, instance:com.logintest.Testclass1@121314f7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.logintest.Testclass1.SelectCheckbox()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method signature="SelectCheckbox()[pri:8, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:17:41 IST" name="SelectCheckbox" finished-at="2023-05-11T16:17:41 IST" duration-ms="233" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectCheckbox -->
        <test-method is-config="true" signature="captureScreenshot(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:17:41 IST" name="captureScreenshot" finished-at="2023-05-11T16:17:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectCheckbox status=SUCCESS method=Testclass1.SelectCheckbox()[pri:8, instance:com.logintest.Testclass1@121314f7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.logintest.Testclass1.SelectCheckbox()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
        <test-method is-config="true" signature="createExtentTest(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:17:41 IST" name="createExtentTest" finished-at="2023-05-11T16:17:41 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Testclass1.ConfirmRiskProfile()[pri:9, instance:com.logintest.Testclass1@121314f7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.logintest.Testclass1.ConfirmRiskProfile()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method signature="ConfirmRiskProfile()[pri:9, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:17:41 IST" name="ConfirmRiskProfile" finished-at="2023-05-11T16:17:42 IST" duration-ms="103" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ConfirmRiskProfile -->
        <test-method is-config="true" signature="captureScreenshot(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:17:42 IST" name="captureScreenshot" finished-at="2023-05-11T16:17:42 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ConfirmRiskProfile status=SUCCESS method=Testclass1.ConfirmRiskProfile()[pri:9, instance:com.logintest.Testclass1@121314f7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.logintest.Testclass1.ConfirmRiskProfile()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
        <test-method is-config="true" signature="createExtentTest(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:17:42 IST" name="createExtentTest" finished-at="2023-05-11T16:17:42 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Testclass1.SelectTenure1()[pri:10, instance:com.logintest.Testclass1@121314f7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.logintest.Testclass1.SelectTenure1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method signature="SelectTenure1()[pri:10, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:17:42 IST" name="SelectTenure1" finished-at="2023-05-11T16:17:49 IST" duration-ms="7537" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectTenure1 -->
        <test-method is-config="true" signature="captureScreenshot(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:17:49 IST" name="captureScreenshot" finished-at="2023-05-11T16:17:49 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectTenure1 status=SUCCESS method=Testclass1.SelectTenure1()[pri:10, instance:com.logintest.Testclass1@121314f7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.logintest.Testclass1.SelectTenure1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
        <test-method is-config="true" signature="createExtentTest(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:17:49 IST" name="createExtentTest" finished-at="2023-05-11T16:17:49 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Testclass1.SelectStrategy()[pri:11, instance:com.logintest.Testclass1@121314f7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.logintest.Testclass1.SelectStrategy()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method signature="SelectStrategy()[pri:11, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:17:49 IST" name="SelectStrategy" finished-at="2023-05-11T16:17:49 IST" duration-ms="135" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectStrategy -->
        <test-method is-config="true" signature="captureScreenshot(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:17:49 IST" name="captureScreenshot" finished-at="2023-05-11T16:17:49 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectStrategy status=SUCCESS method=Testclass1.SelectStrategy()[pri:11, instance:com.logintest.Testclass1@121314f7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.logintest.Testclass1.SelectStrategy()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
        <test-method is-config="true" signature="createExtentTest(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:17:49 IST" name="createExtentTest" finished-at="2023-05-11T16:17:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Testclass1.ClickOnSubmitMyStrategy()[pri:12, instance:com.logintest.Testclass1@121314f7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.logintest.Testclass1.ClickOnSubmitMyStrategy()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method signature="ClickOnSubmitMyStrategy()[pri:12, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:17:49 IST" name="ClickOnSubmitMyStrategy" finished-at="2023-05-11T16:17:49 IST" duration-ms="203" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickOnSubmitMyStrategy -->
        <test-method is-config="true" signature="captureScreenshot(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:17:49 IST" name="captureScreenshot" finished-at="2023-05-11T16:17:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickOnSubmitMyStrategy status=SUCCESS method=Testclass1.ClickOnSubmitMyStrategy()[pri:12, instance:com.logintest.Testclass1@121314f7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.logintest.Testclass1.ClickOnSubmitMyStrategy()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
        <test-method is-config="true" signature="createExtentTest(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:17:49 IST" name="createExtentTest" finished-at="2023-05-11T16:17:49 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Testclass1.SelectAmount()[pri:13, instance:com.logintest.Testclass1@121314f7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.logintest.Testclass1.SelectAmount()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method signature="SelectAmount()[pri:13, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:17:49 IST" name="SelectAmount" finished-at="2023-05-11T16:17:50 IST" duration-ms="107" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectAmount -->
        <test-method is-config="true" signature="captureScreenshot(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:17:50 IST" name="captureScreenshot" finished-at="2023-05-11T16:17:50 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectAmount status=SUCCESS method=Testclass1.SelectAmount()[pri:13, instance:com.logintest.Testclass1@121314f7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.logintest.Testclass1.SelectAmount()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
        <test-method is-config="true" signature="createExtentTest(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:17:50 IST" name="createExtentTest" finished-at="2023-05-11T16:17:50 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Testclass1.SelectPlan()[pri:14, instance:com.logintest.Testclass1@121314f7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.logintest.Testclass1.SelectPlan()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method signature="SelectPlan()[pri:14, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:17:50 IST" name="SelectPlan" finished-at="2023-05-11T16:17:50 IST" duration-ms="321" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectPlan -->
        <test-method is-config="true" signature="captureScreenshot(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:17:50 IST" name="captureScreenshot" finished-at="2023-05-11T16:17:50 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectPlan status=SUCCESS method=Testclass1.SelectPlan()[pri:14, instance:com.logintest.Testclass1@121314f7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.logintest.Testclass1.SelectPlan()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
        <test-method is-config="true" signature="createExtentTest(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:17:50 IST" name="createExtentTest" finished-at="2023-05-11T16:17:50 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Testclass1.CLickOnContinueButton()[pri:15, instance:com.logintest.Testclass1@121314f7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.logintest.Testclass1.CLickOnContinueButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method signature="CLickOnContinueButton()[pri:15, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:17:50 IST" name="CLickOnContinueButton" finished-at="2023-05-11T16:17:50 IST" duration-ms="177" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CLickOnContinueButton -->
        <test-method is-config="true" signature="captureScreenshot(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:17:50 IST" name="captureScreenshot" finished-at="2023-05-11T16:17:50 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CLickOnContinueButton status=SUCCESS method=Testclass1.CLickOnContinueButton()[pri:15, instance:com.logintest.Testclass1@121314f7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.logintest.Testclass1.CLickOnContinueButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
        <test-method is-config="true" signature="createExtentTest(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:17:50 IST" name="createExtentTest" finished-at="2023-05-11T16:17:50 IST" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Testclass1.ConfirmInvestmentPreference()[pri:16, instance:com.logintest.Testclass1@121314f7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.logintest.Testclass1.ConfirmInvestmentPreference() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method signature="ConfirmInvestmentPreference()[pri:16, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:17:50 IST" name="ConfirmInvestmentPreference" finished-at="2023-05-11T16:19:32 IST" duration-ms="101660" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ConfirmInvestmentPreference -->
        <test-method is-config="true" signature="captureScreenshot(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:19:32 IST" name="captureScreenshot" finished-at="2023-05-11T16:19:32 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ConfirmInvestmentPreference status=SUCCESS method=Testclass1.ConfirmInvestmentPreference()[pri:16, instance:com.logintest.Testclass1@121314f7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.logintest.Testclass1.ConfirmInvestmentPreference() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
        <test-method is-config="true" signature="createExtentTest(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:19:32 IST" name="createExtentTest" finished-at="2023-05-11T16:19:32 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Testclass1.UnlockPortfolioButton()[pri:17, instance:com.logintest.Testclass1@121314f7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.logintest.Testclass1.UnlockPortfolioButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method signature="UnlockPortfolioButton()[pri:17, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:19:32 IST" name="UnlockPortfolioButton" finished-at="2023-05-11T16:19:42 IST" duration-ms="10083" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//div[text()='Unlock now']"}
  (Session info: chrome=108.0.5359.94)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.2.2', revision: '683ccb65d6'
System info: host: 'ts-Latitude-3340', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-56-generic', java.version: '17.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [eb773957d8fee365f1b6f6711d1e3444, findElement {using=xpath, value=//div[text()='Unlock now']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.94, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: /tmp/.com.google.Chrome.bKYOQO}, goog:chromeOptions: {debuggerAddress: localhost:36625}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: LINUX, proxy: Proxy(), se:cdp: ws://localhost:36625/devtoo..., se:cdpVersion: 108.0.5359.94, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: eb773957d8fee365f1b6f6711d1e3444]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//div[text()='Unlock now']"}
  (Session info: chrome=108.0.5359.94)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.2.2', revision: '683ccb65d6'
System info: host: 'ts-Latitude-3340', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-56-generic', java.version: '17.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [eb773957d8fee365f1b6f6711d1e3444, findElement {using=xpath, value=//div[text()='Unlock now']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.94, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: /tmp/.com.google.Chrome.bKYOQO}, goog:chromeOptions: {debuggerAddress: localhost:36625}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: LINUX, proxy: Proxy(), se:cdp: ws://localhost:36625/devtoo..., se:cdpVersion: 108.0.5359.94, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: eb773957d8fee365f1b6f6711d1e3444
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:588)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:406)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:398)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at jdk.proxy2/jdk.proxy2.$Proxy22.click(Unknown Source)
at com.Jarvis.Portfolio.InvestmentPreference.ClickonunlockNowButtton(InvestmentPreference.java:53)
at com.logintest.Testclass1.UnlockPortfolioButton(Testclass1.java:105)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UnlockPortfolioButton -->
        <test-method is-config="true" signature="captureScreenshot(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:19:42 IST" name="captureScreenshot" finished-at="2023-05-11T16:19:42 IST" duration-ms="196" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=UnlockPortfolioButton status=FAILURE method=Testclass1.UnlockPortfolioButton()[pri:17, instance:com.logintest.Testclass1@121314f7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.logintest.Testclass1.UnlockPortfolioButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
        <test-method is-config="true" signature="createExtentTest(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:19:42 IST" name="createExtentTest" finished-at="2023-05-11T16:19:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Testclass1.ClickOnPayNowButton()[pri:18, instance:com.logintest.Testclass1@121314f7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.logintest.Testclass1.ClickOnPayNowButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method signature="ClickOnPayNowButton()[pri:18, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:19:42 IST" name="ClickOnPayNowButton" finished-at="2023-05-11T16:19:52 IST" duration-ms="10052" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//button[@id='mui-4']"}
  (Session info: chrome=108.0.5359.94)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.2.2', revision: '683ccb65d6'
System info: host: 'ts-Latitude-3340', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-56-generic', java.version: '17.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [eb773957d8fee365f1b6f6711d1e3444, findElement {using=xpath, value=//button[@id='mui-4']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.94, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: /tmp/.com.google.Chrome.bKYOQO}, goog:chromeOptions: {debuggerAddress: localhost:36625}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: LINUX, proxy: Proxy(), se:cdp: ws://localhost:36625/devtoo..., se:cdpVersion: 108.0.5359.94, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: eb773957d8fee365f1b6f6711d1e3444]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//button[@id='mui-4']"}
  (Session info: chrome=108.0.5359.94)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.2.2', revision: '683ccb65d6'
System info: host: 'ts-Latitude-3340', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-56-generic', java.version: '17.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [eb773957d8fee365f1b6f6711d1e3444, findElement {using=xpath, value=//button[@id='mui-4']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.94, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: /tmp/.com.google.Chrome.bKYOQO}, goog:chromeOptions: {debuggerAddress: localhost:36625}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: LINUX, proxy: Proxy(), se:cdp: ws://localhost:36625/devtoo..., se:cdpVersion: 108.0.5359.94, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: eb773957d8fee365f1b6f6711d1e3444
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:588)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:406)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:398)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at jdk.proxy2/jdk.proxy2.$Proxy22.click(Unknown Source)
at com.Jarvis.Portfolio.Payment.ClickoPayButton(Payment.java:19)
at com.logintest.Testclass1.ClickOnPayNowButton(Testclass1.java:110)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickOnPayNowButton -->
        <test-method is-config="true" signature="captureScreenshot(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:19:52 IST" name="captureScreenshot" finished-at="2023-05-11T16:19:52 IST" duration-ms="247" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickOnPayNowButton status=FAILURE method=Testclass1.ClickOnPayNowButton()[pri:18, instance:com.logintest.Testclass1@121314f7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.logintest.Testclass1.ClickOnPayNowButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
        <test-method is-config="true" signature="createExtentTest(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:19:52 IST" name="createExtentTest" finished-at="2023-05-11T16:19:52 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Testclass1.ClickOnIAgreeButton()[pri:19, instance:com.logintest.Testclass1@121314f7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.logintest.Testclass1.ClickOnIAgreeButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method signature="ClickOnIAgreeButton()[pri:19, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:19:52 IST" name="ClickOnIAgreeButton" finished-at="2023-05-11T16:20:02 IST" duration-ms="10049" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//button[text()='I agree']"}
  (Session info: chrome=108.0.5359.94)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.2.2', revision: '683ccb65d6'
System info: host: 'ts-Latitude-3340', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-56-generic', java.version: '17.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [eb773957d8fee365f1b6f6711d1e3444, findElement {using=xpath, value=//button[text()='I agree']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.94, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: /tmp/.com.google.Chrome.bKYOQO}, goog:chromeOptions: {debuggerAddress: localhost:36625}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: LINUX, proxy: Proxy(), se:cdp: ws://localhost:36625/devtoo..., se:cdpVersion: 108.0.5359.94, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: eb773957d8fee365f1b6f6711d1e3444]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//button[text()='I agree']"}
  (Session info: chrome=108.0.5359.94)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.2.2', revision: '683ccb65d6'
System info: host: 'ts-Latitude-3340', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-56-generic', java.version: '17.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [eb773957d8fee365f1b6f6711d1e3444, findElement {using=xpath, value=//button[text()='I agree']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.94, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: /tmp/.com.google.Chrome.bKYOQO}, goog:chromeOptions: {debuggerAddress: localhost:36625}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: LINUX, proxy: Proxy(), se:cdp: ws://localhost:36625/devtoo..., se:cdpVersion: 108.0.5359.94, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: eb773957d8fee365f1b6f6711d1e3444
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:588)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:406)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:398)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at jdk.proxy2/jdk.proxy2.$Proxy22.click(Unknown Source)
at com.Jarvis.Portfolio.Payment.ClickOnIAgree(Payment.java:23)
at com.logintest.Testclass1.ClickOnIAgreeButton(Testclass1.java:115)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickOnIAgreeButton -->
        <test-method is-config="true" signature="captureScreenshot(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:20:02 IST" name="captureScreenshot" finished-at="2023-05-11T16:20:03 IST" duration-ms="205" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickOnIAgreeButton status=FAILURE method=Testclass1.ClickOnIAgreeButton()[pri:19, instance:com.logintest.Testclass1@121314f7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.logintest.Testclass1.ClickOnIAgreeButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:20:03 IST" name="afterTest" finished-at="2023-05-11T16:20:03 IST" duration-ms="905" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:com.logintest.Testclass1@121314f7]" started-at="2023-05-11T16:20:04 IST" name="teardown" finished-at="2023-05-11T16:20:04 IST" duration-ms="249" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.logintest.Testclass1 -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
